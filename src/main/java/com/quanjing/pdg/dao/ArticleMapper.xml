<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.quanjing.pdg.dao.ArticleDao">
	
    <resultMap id="Article" type="com.pdg.model.Article">
        <result property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="subtitle" column="subtitle"/>
        <result property="categoryId" column="category_id"/>
        <result property="coverUrl" column="cover_url"/>
        <result property="summary" column="summary"/>
        <result property="content" column="content"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="userId" column="user_id"/>
    </resultMap>
    
   	<resultMap id="ArticleVo" type="com.pdg.vo.ArticleVo" extends="Article"></resultMap>
    
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        	id ,
        	title ,
        	subtitle ,
        	category_id ,
        	cover_url ,
        	summary ,
        	content ,
        	create_time ,
        	update_time ,
        	user_id 
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert"  useGeneratedKeys="true" keyProperty="id" 
	>
    <![CDATA[
        INSERT INTO article (
        	id ,
        	title ,
        	subtitle ,
        	category_id ,
        	cover_url ,
        	summary ,
        	content ,
        	create_time ,
        	update_time ,
        	user_id 
        ) VALUES (
        	#{id} ,
        	#{title} ,
        	#{subtitle} ,
        	#{categoryId} ,
        	#{coverUrl} ,
        	#{summary} ,
        	#{content} ,
        	#{createTime} ,
        	#{updateTime} ,
        	#{userId}
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update">
        UPDATE article
        <trim prefix="SET" suffixOverrides=",">  
	        <if test="@Ognl@isNotEmpty(title)">
	       		title = #{title} ,
	        </if>
	        <if test="@Ognl@isNotEmpty(subtitle)">
				subtitle = #{subtitle} ,
			</if>
			<if test="@Ognl@isNotEmpty(categoryId)">
				category_id = #{categoryId} ,
			</if>
			<if test="coverUrl">
				cover_url = #{coverUrl} ,
			</if>
			<if test="@Ognl@isNotEmpty(summary)">
	       		summary = #{summary} ,
	        </if>
	        <if test="@Ognl@isNotEmpty(content)">
	        	content = #{content} ,
	        </if>
	        update_time = now(),
	        </trim>
        WHERE 
	        id = #{id} 
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM article 
        WHERE
	        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById"  resultMap="ArticleVo">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM article 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	
		
    <select id="findCount" resultType="long">
        SELECT count(*) FROM article 
		<include refid="findPage_where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
        <select id="findPage" resultMap="Article">
    	SELECT <include refid="columns" />
	    FROM article 
		<include refid="findPage_where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
			<if test="@Ognl@isNotEmpty(categoryId)">
				AND category_id = #{categoryId}
			</if>
			<if test="@Ognl@isNotEmpty(creatTimeBegin)">
				AND create_time >= #{creatTimeBegin}
		   	</if>
		   	<if test="@Ognl@isNotEmpty(creatTimeEnd)">
				AND create_time &lt;= #{creatTimeEnd}
		   	</if>
		</where>
	</sql>
	
</mapper>