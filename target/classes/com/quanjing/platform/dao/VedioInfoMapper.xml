<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.quanjing.platform.dao.VedioInfoDao">

	
    <resultMap id="VedioInfo" type="com.quanjing.model.platform.VedioInfo">
        <result property="id" column="id"/>
        <result property="content" column="content"/>
        <result property="vedioId" column="vedio_id"/>
    </resultMap>
    
     <resultMap id="VedioInfoVo" type="com.quanjing.model.platform.vo.VedioInfoVo" extends="VedioInfo"></resultMap>
	
	<sql id="columns">
	    <![CDATA[
        	id,content,vedio_id
	    ]]>
	</sql>
	
	
	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert"  useGeneratedKeys="true" keyProperty="id" 
	>
    <![CDATA[
        INSERT INTO vedio_info (
        	id ,
        	content ,
        	vedio_id 
        ) VALUES (
        	#{id} ,
        	#{content} ,
        	#{vedioId} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update">
        UPDATE vedio_info
        <trim prefix="SET" suffixOverrides=",">  
	        <if test="@Ognl@isNotEmpty(content)">
	        content = #{content,jdbcType=VARCHAR} ,
	        </if>
	        <if test="@Ognl@isNotEmpty(vedioId)">
	        vedio_id = #{vedioId,jdbcType=BIGINT} 
	        </if>
 	     </trim>
        WHERE 
	        id = #{id} 
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM vedio_info 
        WHERE
	        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="VedioInfoVo">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM vedio_info 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	
		
    <select id="findCount" resultType="long">
        SELECT count(*) FROM vedio_info 
		<include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="VedioInfo">
    	SELECT <include refid="columns" />
	    FROM vedio_info 
		<include refid="findWhere"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<sql id="findWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(id)">
				AND id = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(content)">
				AND content = #{content}
			</if>
	       <if test="@Ognl@isNotEmpty(vedioId)">
				AND vedio_id = #{vedioId}
			</if>
		</where>
	</sql>
	
</mapper>

